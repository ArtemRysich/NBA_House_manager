{"mappings":"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","sources":["src/realty.js"],"sourcesContent":["import * as basicLightbox from 'basiclightbox';\nimport { v4 as uuidv4 } from 'uuid';\nimport '../node_modules/basiclightbox/dist/basicLightbox.min.css';\n\nconst addRealtyBtn = document.querySelector('.js-add-realty');\nconst filter = document.querySelector('.js-filter');\nconst filterRemoveBtn = document.querySelector('.js-filter-items-remove');\nconst LS_KEY = 'realty-items';\n\nconst realtyItems = JSON.parse(localStorage.getItem(LS_KEY)) ?? [];\nconst list = document.querySelector('.js-list');\nlet img = null;\n\nfilterRemoveBtn.addEventListener('click', handlerRemoveFilter);\nfilter.addEventListener('submit', handlerAddFilter);\n\naddRealtyBtn.addEventListener('click', onClick);\nlist.addEventListener('click', cardHandler);\n\nfunction handlerAddFilter(evt) {\n  evt.preventDefault();\n  const { filter } = evt.currentTarget.elements;\n  const filteredItems = realtyItems.filter(({status}) => status === filter.value);\n  list.innerHTML = createMarkup(filteredItems);\n}\n\nfunction handlerRemoveFilter() {\n  filter.reset();\n  list.innerHTML = createMarkup(realtyItems);\n}\nfunction onClick() {\n  const instance = basicLightbox.create(\n    `\n    <form action=\"submit\" class=\"js-form-realty form-realty\">\n\n    <div class='form-realty__input-block form-realty__input-block_row'>\n      <label for=\"photo\" class='form-realty__label'>Завантажте фото об'єкту</label>\n      <label for=\"photo\" class='form-realty__image-btn'></label>\n      <input type=\"file\" name=\"realty-photo\" id=\"photo\" accept=\"image/png, image/jpeg\"  class=\"js-test\"hidden>\n    </div>\n\n    <div class=\"js-form-realty__preview form-realty__preview\"></div>\n\n    <div class='form-realty__input-block'>\n    <label for=\"text\" class='form-realty__label'>Назва вашого об'єкта</label>\n    <input type=\"text\" class='form-realty__input' name=\"realty-title\" id=\"title\">\n    </div>\n\n    <div class='form-realty__input-block'>\n      <label for=\"details\" class='form-realty__label'>Опис об'єкту</label>\n      <textarea class='form-realty__input' name=\"realty-details\" id=\"details\"></textarea>\n    </div>\n\n    <div class='form-realty__input-block'>\n      <label for=\"rooms\" class='form-realty__label'>Кількість кімнат</label>\n      <input type=\"number\" class='form-realty__input' min=\"0\" name=\"realty-rooms\" id=\"rooms\">\n    </div>\n\n    <div class='form-realty__input-block'>\n      <label for=\"area\" class='form-realty__label'>Площа об'єкту м<sup>2</sup>;</label>\n      <input type=\"number\" class='form-realty__input' min=\"0\" name=\"realty-area\" id=\"area\">\n    </div>\n\n    <div class='form-realty__input-block'>\n      <label for=\"price\" class='form-realty__label'>Вартість об'єкту</label>\n      <input type=\"number\" class='form-realty__input' min=\"0\" name=\"realty-price\" id=\"price\">\n    </div>\n\n    <div class='form-realty__input-block'>\n      <label for=\"type\" class='form-realty__label'>Тип пропозиції</label>\n      <select name=\"realty-type\" id=\"type\" class='form-realty__select'>\n        <option value=\"Продаж\">Продаж</option>\n        <option value=\"Оренда\">Оренда</option>\n      </select>\n    </div>\n    <button class='form-realty__create'>Створити об'єкт</button>\n  </form>`,\n    {\n      onShow: () => {\n        document.body.classList.add('lock');\n      },\n      onClose: () => {\n        document.body.classList.remove('lock');\n      },\n    }\n  );\n\n  instance.show();\n\n  const form = document.querySelector('.js-form-realty');\n  form.addEventListener('submit', addRealty.bind(instance));\n  form.photo.addEventListener('change', onLoad);\n}\n\nfunction cardHandler(evt) {\n  if (!evt.target.closest('.js-realty-item')) {\n    return;\n  }\n  const { id } = evt.target.closest('.js-realty-item').dataset;\n  const { title, photo, details, price, area, rooms, type, status } =\n    realtyItems.find(({ id: currentId }) => currentId === id);\n  const instance =\n    basicLightbox.create(`<div data-id=\"${id}\" class='manage-popup'>\n  <div class='manage-popup__image'>\n    <img src=\"${photo}\" alt=\"${title}\">\n  </div>\n  <h2 class='manage-popup__title'>${title}</h2>\n  <h3 class='manage-popup__details'>${details}</h3>\n  <h3 class='manage-popup__price'>Ціна: ${price} $</h3>\n  <h3 class='manage-popup__square>Площа: ${area} м<sup>2</sup></h3>\n  <h3 class='manage-popup__numbers'>Кількість кімнат: ${rooms}</h3>\n  <h3 class='manage-popup__type'>Тип: ${type}</h3>\n  <h3 class='manage-popup__status'>Статус: ${status}</h3>\n  <button class=\"js-realty-info manage-popup__button\">Управління об'єктом</button>\n  </div>`);\n  instance.show();\n\n  const infoBtn = document.querySelector('.js-realty-info');\n  infoBtn.addEventListener('click', handlerRedirectMode.bind({ id }));\n}\n\nfunction onLoad() {\n  renderImage(this.files[0]);\n}\n\nfunction handlerRedirectMode() {\n  window.location.href = './manageItem.html?id=' + this.id;\n}\n\nfunction renderImage(file) {\n  const container = document.querySelector('.js-form-realty__preview');\n  const reader = new FileReader();\n\n  reader.onload = function (event) {\n    img = event.target.result;\n    container.insertAdjacentHTML(\n      'beforeend',\n      `<img src=\"${img}\" alt=\"preview\">`\n    );\n  };\n\n  reader.readAsDataURL(file);\n}\n\nfunction addRealty(evt) {\n  evt.preventDefault();\n  console.log(document.querySelector('.js-test').value);\n  const { details, rooms, area, price, type, title } =\n    evt.currentTarget.elements;\n\n  const data = {\n    id: uuidv4(),\n    photo: img,\n    title: title.value,\n    details: details.value,\n    rooms: rooms.value,\n    area: area.value,\n    price: price.value,\n    type: type.value,\n    status: type.value === 'Продаж' ? 'В продажі' : 'Вільно',\n  };\n  realtyItems.push(data);\n  localStorage.setItem(LS_KEY, JSON.stringify(realtyItems));\n  this.close();\n  list.innerHTML = createMarkup(realtyItems);\n}\n\n(function () {\n  if (!realtyItems.length) {\n    return;\n  }\n  list.insertAdjacentHTML('beforeend', createMarkup(realtyItems));\n})();\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({ status, id, photo, price, area, title, type }) => `\n      <li data-id=\"${id}\" class=\"js-realty-item main-objects__item\">\n        <div class='main-objects__body'>\n          <div class='main-objects__image'>\n            <img src=\"${photo}\" alt=\"${price}\">\n          </div>\n          <div class='main-objects__desc'>\n            <h2 class='main-objects__title'>${title}</h2>\n            <h3 class='main-objects__price'>Ціна: ${price}$</h3>\n            <h3 class='main-objects__square'>Площа: ${area} м<sup>2</sup></h3>\n            <h3 class='main-objects__status'>Статус: ${status}</h3>\n          </div>\n        </div>\n    </li>`\n    )\n    .join('');\n}\n"],"names":["$9B8F0","parcelRequire","$6b67e4a08e7ccb3f$var$addRealtyBtn","document","querySelector","$6b67e4a08e7ccb3f$var$filter","$6b67e4a08e7ccb3f$var$filterRemoveBtn","$6b67e4a08e7ccb3f$var$ref","$6b67e4a08e7ccb3f$var$realtyItems","JSON","parse","localStorage","getItem","$6b67e4a08e7ccb3f$var$list","$6b67e4a08e7ccb3f$var$img","$6b67e4a08e7ccb3f$var$onLoad","file","container","reader","FileReader","onload","event","target","result","insertAdjacentHTML","readAsDataURL","$6b67e4a08e7ccb3f$var$renderImage","this","files","$6b67e4a08e7ccb3f$var$handlerRedirectMode","window","location","href","id","$6b67e4a08e7ccb3f$var$addRealty","evt","preventDefault","console","log","value","details","rooms","area","price","type","title","currentTarget","elements","data","$fY5Ig","v4","photo","status","push","setItem","stringify","close","innerHTML","$6b67e4a08e7ccb3f$var$createMarkup","arr","map","join","addEventListener","reset","filter","filter1","filteredItems","instance","create","onShow","body","classList","add","onClose","remove","show","form","bind","closest","dataset","find","currentId","length"],"version":3,"file":"realty.764c4e05.js.map"}