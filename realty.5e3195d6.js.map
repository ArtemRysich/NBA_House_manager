{"mappings":"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","sources":["src/realty.js","src/services/collection/addToCollection.js"],"sourcesContent":["import * as basicLightbox from 'basiclightbox';\nimport '../node_modules/basiclightbox/dist/basicLightbox.min.css';\nimport { addToCollection } from './services/collection/addToCollection';\n\nconst addRealtyBtn = document.querySelector('.js-add-realty');\nconst realtyItems = [];\nconst list = document.querySelector('.js-list');\nlet img = null;\naddRealtyBtn.addEventListener('click', onClick);\nlist.addEventListener('click', cardHandler);\n\nconst filter = document.querySelector('.js-filter');\nconst filterRemoveBtn = document.querySelector('.js-filter-items-remove');\n\nfilterRemoveBtn.addEventListener('click', handlerRemoveFilter);\nfilter.addEventListener('submit', handlerAddFilter);\n\nfunction handlerAddFilter(evt) {\n  evt.preventDefault();\n  const { filter } = evt.currentTarget.elements;\n  const filteredItems = realtyItems.filter(\n    ({ status }) => status === filter.value\n  );\n  list.innerHTML = createMarkup(filteredItems);\n}\n\nfunction handlerRemoveFilter() {\n  filter.reset();\n  list.innerHTML = createMarkup(realtyItems);\n}\nfunction onClick() {\n  const instance = basicLightbox.create(\n    `\n    <form action=\"submit\" class=\"js-form-realty form-realty\">\n\n    <div class='form-realty__input-block form-realty__input-block_row'>\n      <label for=\"photo\" class='form-realty__label'>Завантажте фото об'єкту*</label>\n      <label for=\"photo\" class='form-realty__image-btn'></label>\n      <input type=\"file\" name=\"realty-photo\" id=\"photo\" accept=\"image/png, image/jpeg\" hidden required>\n    </div>\n\n    <div class=\"js-form-realty__preview form-realty__preview\"></div>\n\n    <div class='form-realty__input-block'>\n    <label for=\"text\" class='form-realty__label'>Назва вашого об'єкта*</label>\n    <input type=\"text\" class='form-realty__input' name=\"realty-title\" id=\"title\" required>\n    </div>\n\n    <div class='form-realty__input-block'>\n      <label for=\"details\" class='form-realty__label'>Опис об'єкту*</label>\n      <textarea class='form-realty__input' name=\"realty-details\" id=\"details\" required></textarea>\n    </div>\n\n    <div class='form-realty__input-block'>\n      <label for=\"rooms\" class='form-realty__label'>Кількість кімнат*</label>\n      <input type=\"number\" class='form-realty__input' min=\"0\" name=\"realty-rooms\" id=\"rooms\" required>\n    </div>\n\n    <div class='form-realty__input-block'>\n      <label for=\"area\" class='form-realty__label'>Площа об'єкту м<sup>2</sup>*</label>\n      <input type=\"number\" class='form-realty__input' min=\"0\" name=\"realty-area\" id=\"area\" required>\n    </div>\n\n    <div class='form-realty__input-block'>\n      <label for=\"price\" class='form-realty__label'>Вартість об'єкту*</label>\n      <input type=\"number\" class='form-realty__input' min=\"0\" name=\"realty-price\" id=\"price\" required>\n    </div>\n\n    <div class='form-realty__input-block'>\n      <label for=\"type\" class='form-realty__label'>Тип пропозиції*</label>\n      <select name=\"realty-type\" id=\"type\" class='form-realty__select' required>\n        <option value=\"Оренда\">Оренда</option>\n        <option value=\"Продаж\">Продаж</option>\n      </select>\n    </div>\n    <button class='form-realty__create'>Створити об'єкт</button>\n  </form>`,\n    {\n      onShow: () => {\n        document.body.classList.add('lock');\n      },\n      onClose: () => {\n        document.body.classList.remove('lock');\n      },\n    }\n  );\n\n  instance.show();\n\n  const form = document.querySelector('.js-form-realty');\n  form.addEventListener('submit', addRealty.bind(instance));\n  form.photo.addEventListener('change', onLoad);\n}\n\nfunction cardHandler(evt) {\n  if (!evt.target.closest('.js-realty-item')) {\n    return;\n  }\n  const { id } = evt.target.closest('.js-realty-item').dataset;\n  console.log(id);\n  const { title, photo, details, price, area, rooms, type, status } =\n    realtyItems.find(({ id: currentId }) => currentId === Number(id));\n  const instance =\n    basicLightbox.create(`<div data-id=\"${id}\" class='manage-popup'>\n  <div class='manage-popup__image'>\n    <img src=\"${photo}\" alt=\"${title}\">\n  </div>\n  <h2 class='manage-popup__title'>${title}</h2>\n  <h3 class='manage-popup__details'>${details}</h3>\n  <h3 class='manage-popup__price'>Ціна: ${price} $</h3>\n  <h3 class='manage-popup__square>Площа: ${area} м<sup>2</sup></h3>\n  <h3 class='manage-popup__numbers'>Кількість кімнат: ${rooms}</h3>\n  <h3 class='manage-popup__type'>Тип: ${type}</h3>\n  <h3 class='manage-popup__status'>Статус: ${status}</h3>\n  <button class=\"js-realty-info manage-popup__button\">Управління об'єктом</button>\n  </div>`);\n  instance.show();\n\n  const infoBtn = document.querySelector('.js-realty-info');\n  infoBtn.addEventListener('click', handlerRedirectMode.bind({ id }));\n}\n\nfunction onLoad() {\n  renderImage(this.files[0]);\n}\n\nfunction handlerRedirectMode() {\n  window.location.href = './manageItem.html?id=' + this.id;\n}\n\nfunction renderImage(file) {\n  const container = document.querySelector('.js-form-realty__preview');\n  const reader = new FileReader();\n\n  reader.onload = function (event) {\n    img = event.target.result;\n    container.innerHTML = `<img src=\"${img}\" alt=\"preview\">`;\n  };\n\n  reader.readAsDataURL(file);\n}\nfunction addRealty(evt) {\n  evt.preventDefault();\n  const { details, rooms, area, price, type, title } =\n    evt.currentTarget.elements;\n\n  const data = {\n    photo: img,\n    title: title.value,\n    details: details.value,\n    rooms: rooms.value,\n    area: area.value,\n    price: price.value,\n    type: type.value,\n    status: type.value === 'Продаж' ? 'В продажі' : 'Вільно',\n  };\n  console.log(data);\n  addToCollection(data)\n    .then(resp => {\n      realtyItems.push(resp);\n      list.insertAdjacentHTML('beforeend', createMarkup(realtyItems));\n    })\n    .catch(err => console.log(err));\n  this.close();\n}\n\n(function () {\n  if (!realtyItems.length) {\n    return;\n  }\n  list.insertAdjacentHTML('beforeend', createMarkup(realtyItems));\n})();\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({ status, id, photo, price, area, title, type }) => `\n      <li data-id=\"${id}\" class=\"js-realty-item main-objects__item\">\n        <div class='main-objects__body'>\n          <div class='main-objects__image'>\n            <img src=\"${photo}\" alt=\"${price}\">\n          </div>\n          <div class='main-objects__desc'>\n            <h2 class='main-objects__title'>${title}</h2>\n            <h3 class='main-objects__price'>Ціна: ${price}$</h3>\n            <h3 class='main-objects__square'>Площа: ${area} м<sup>2</sup></h3>\n            <h3 class='main-objects__status'>Статус: ${status}</h3>\n          </div>\n        </div>\n    </li>`\n    )\n    .join('');\n}\n","async function addToCollection(data) {\n  const token = localStorage.getItem('Token');\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    },\n  };\n  const resp = await fetch(\n    'https://nba-house-manager.herokuapp.com/objrent/create/',\n    options\n  );\n  if (!resp.ok) {\n    throw new Error('Invalid password');\n  }\n  console.log('resp', resp);\n  return resp.json();\n}\n\nexport { addToCollection };\n"],"names":["$9B8F0","parcelRequire","async","$f22548f0e395c151$export$fe33f556c78278ee","data","token","localStorage","getItem","options","method","body","JSON","stringify","headers","Authorization","resp","fetch","ok","Error","console","log","json","$6b67e4a08e7ccb3f$var$addRealtyBtn","document","querySelector","$6b67e4a08e7ccb3f$var$realtyItems","$6b67e4a08e7ccb3f$var$list","$6b67e4a08e7ccb3f$var$img","addEventListener","instance","create","onShow","classList","add","onClose","remove","show","form","$6b67e4a08e7ccb3f$var$addRealty","bind","photo","$6b67e4a08e7ccb3f$var$onLoad","evt","target","closest","id","dataset","title","details","price","area","rooms","type","status","find","currentId","Number","$6b67e4a08e7ccb3f$var$handlerRedirectMode","$6b67e4a08e7ccb3f$var$filter","file","container","reader","FileReader","onload","event","result","innerHTML","readAsDataURL","$6b67e4a08e7ccb3f$var$renderImage","this","files","window","location","href","preventDefault","currentTarget","elements","value","then","push","insertAdjacentHTML","$6b67e4a08e7ccb3f$var$createMarkup","catch","err","close","arr","map","join","reset","filter","filter1","filteredItems","length"],"version":3,"file":"realty.5e3195d6.js.map"}