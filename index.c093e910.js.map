{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SCAAC,eAAeC,EAAUC,GACvB,MAAMC,EAAU,CACdC,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACP,eAAgB,qBAGdC,QAAaC,MACjB,gDACAP,GAEF,IAAKM,EAAKE,GACR,MAAM,IAAIC,MAAM,oBAGlB,OAAOH,EAAKI,M,CChBdb,eAAec,EAAWZ,GACxB,MAAMC,EAAU,CACdC,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACP,eAAgB,qBAGdC,QAAaC,MACjB,wDACAP,GAEF,IAAKM,EAAKE,GACR,MAAM,IAAIC,MAAM,oBAGlB,OAAOH,EAAKI,M,CFVd,MAAME,EAAYC,SAASC,cAAc,mBACnCC,EAAWF,SAASC,cAAc,mBAqCxC,SAASE,EAAaC,GACpBA,EAAEC,iBAEF,MAAQC,OAAOC,MAAQC,GAAWC,UAAUF,MAAOE,IAAaL,EAAEM,cAAcC,SAOhFb,EALiB,C,SACfU,E,SACAC,IAGmBG,MAAKC,GAAQC,QAAQC,IAAIF,KAAOG,OAAMC,GAAOH,QAAQC,IAAIE,I,CAGhF,SAASC,EAAYd,GACnBA,EAAEC,iBACFS,QAAQC,IAAIX,EAAEM,cAAcC,UAC5B,MACEL,OAASC,MAAOC,GAChBC,UAAYF,MAAOE,IACjBL,EAAEM,cAAcC,SAMpB1B,EAJiB,C,SACfuB,E,SACAC,IAGCG,MAAKC,GAAQM,aAAaC,QAAQ,QAASP,EAAKQ,SAChDL,OAAMC,GAAOH,QAAQC,IAAIE,I,CA9D9BlB,EAAUuB,iBAAiB,SAG3B,WACmBxC,EAAAyC,OAAqB,wTAO7BC,OACMxB,SAASC,cAAc,cAC/BqB,iBAAiB,SAAUnB,E,IAZpCD,EAASoB,iBAAiB,SAc1B,WACmBxC,EAAAyC,OAAqB,8SAMnC,CACDE,OAAQ,KACNzB,SAASX,KAAKqC,UAAUC,IAAI,OAAO,EAErCC,QAAS,KACP5B,SAASX,KAAKqC,UAAUG,OAAO,OAAO,IAGjCL,OACKxB,SAASC,cAAc,aAC/BqB,iBAAiB,SAAUJ,E","sources":["src/index.js","src/services/auth/login.js","src/services/auth/signup.js"],"sourcesContent":["import * as basicLightbox from 'basiclightbox';\nimport '../node_modules/basiclightbox/dist/basicLightbox.min.css';\n\nimport { loginCall } from './services/auth/login';\nimport { signUpCall } from './services/auth/signup';\n\nconst signUpBtn = document.querySelector('.js-show-signUp');\nconst logInBtn = document.querySelector('.js-show-signIn');\n\nsignUpBtn.addEventListener('click', showSignUp);\nlogInBtn.addEventListener('click', showLogIn);\n\nfunction showSignUp() {\n  const instance = basicLightbox.create(`\n  <form class=\"js-signIn signIn\">\n    <input type=\"email\" name=\"email\" class='signIn__input' placeholder=\"Введіть емейл\" />\n    <input type=\"password\" class='signIn__input' name=\"password\" placeholder=\"Введіть пароль\" />\n    <button class='signIn__button'>Зареєструватись</button>\n  </form>\n    `);\n  instance.show();\n  const signIn = document.querySelector('.js-signIn');\n  signIn.addEventListener('submit', onCreateUser);\n}\nfunction showLogIn() {\n  const instance = basicLightbox.create(`\n    <form class=\"js-logIn logIn\">\n    <input type=\"text\" name=\"email\" class='logIn__input' placeholder=\"Введіть емейл...\" />\n    <input type=\"password\" name=\"password\" class='logIn__input' placeholder=\"Введіть пароль...\" />\n    <button class='logIn__button'>Увійти</button>\n  </form>\n  `, {\n    onShow: () => {\n      document.body.classList.add('lock');\n    },\n    onClose: () => {\n      document.body.classList.remove('lock');\n    }\n  });\n  instance.show()\n  const logIn = document.querySelector('.js-logIn');\n  logIn.addEventListener('submit', onLogInUser);\n}\n\nfunction onCreateUser(e) {\n  e.preventDefault();\n\n  const { email:{value : username}, password:{value: password}} = e.currentTarget.elements;\n\n  const userData = {\n    username,\n    password,\n  };\n\n  signUpCall(userData).then(data => console.log(data)).catch(err => console.log(err))\n}\n\nfunction onLogInUser(e) {\n  e.preventDefault();\n  console.log(e.currentTarget.elements);\n  const {\n    email: { value: username },\n    password: { value: password },\n  } = e.currentTarget.elements;\n\n  const userData = {\n    username,\n    password,\n  };\n  loginCall(userData)\n    .then(data => localStorage.setItem('Token', data.token))\n    .catch(err => console.log(err));\n}\n","async function loginCall(userData) {\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(userData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  const resp = await fetch(\n    'https://nba-house-manager.herokuapp.com/login',\n    options\n  );\n  if (!resp.ok) {\n    throw new Error('Invalid password');\n  }\n\n  return resp.json();\n}\n\nexport { loginCall };\n","async function signUpCall(userData) {\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(userData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  const resp = await fetch(\n    'https://nba-house-manager.herokuapp.com/users/create/',\n    options\n  );\n  if (!resp.ok) {\n    throw new Error('Invalid password');\n  }\n\n  return resp.json();\n}\n\nexport { signUpCall };\n"],"names":["$9B8F0","parcelRequire","async","$2c14a4a2131eacce$export$cd7d4df50c8f5a2d","userData","options","method","body","JSON","stringify","headers","resp","fetch","ok","Error","json","$dc7e3b286c7f18de$export$7e088af90f8d5b75","$1f0dc3b9307be026$var$signUpBtn","document","querySelector","$1f0dc3b9307be026$var$logInBtn","$1f0dc3b9307be026$var$onCreateUser","e","preventDefault","email","value","username","password","currentTarget","elements","then","data","console","log","catch","err","$1f0dc3b9307be026$var$onLogInUser","localStorage","setItem","token","addEventListener","create","show","onShow","classList","add","onClose","remove"],"version":3,"file":"index.c093e910.js.map"}